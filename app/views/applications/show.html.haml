- content_for :page_title, page_title(@application)
- content_for :meta_description, @application.description
- content_for :extra_meta_tags do
  %meta(name="twitter:card" content="summary")
  %meta(name="twitter:site" content="@PlanningAlerts")
  %meta(name="twitter:title" content="#{@application.address}")
  %meta(name="twitter:description" content="#{@application.description[0..199] if @application.description}")
  %meta(name="twitter:image" content="#{google_static_streetview_url(@application, :size => "120x120")}")

= render "applications/facebook"
= render "applications/twitter"

#main
  #application
    %article#application-info
      %header
        %h3.address= @application.address

      - if @application.location
        #map_div
          %noscript= google_static_map(@application, :size => "350x200")

      .details
        - if @application.location
          #pano
            %noscript= google_static_streetview(@application, :size => "350x200")

        %p.description= @application.description
        = link_to @application.info_url, :class => "button button-rounded", :target => "_blank" do
          = image_tag "external_link.png", size: "10x10"
          Read more information

      %footer
        %p.dates= scraped_and_received_text(@application)
        %p.source (Source: #{link_to @application.authority.full_name, authority_path(@application.authority.short_name_encoded)}, reference #{@application.council_reference})

    %hr

    #comments-area
      - if @comments.present?
        %h4= pluralize(@comments.count, "Comment")
        %p.small.quiet
          Have your say by #{link_to "adding your own comment", "#add-comment"}.
        %ol#comments
          - @comments.each do |comment|
            %li{:id => "comment#{comment.id}"}
              = render :partial => 'comments/comment', :locals => {:comment => comment}
      %h4#add-comment Add your own comment
      - if @application.authority.contactable?
        - if @application.on_notice_to
          %p= on_notice_text(@application)
        - if @application.on_notice_to && Date.today > @application.on_notice_to
          %p
            All the information you provide in your comment below will be sent to
            = succeed "." do
              %strong= @application.authority.full_name
            The text of your comment and your name will be public.
        - else
          %p
            All the information you provide in your comment below will be sent to
            %strong= @application.authority.full_name
            where it will be considered when they decide whether to approve this application or not.
            The text of your comment and your name will be public.
        %p
          If you have made a donation to a Councillor and/or gift to a Councillor or Council employee you may
          #{link_to("need to disclose this", faq_path(:anchor => "disclosure"))}.
        = semantic_form_for [@application, @comment] do |f|
          = f.inputs do
            = f.input :text, :label => 'Comment', :placeholder => "Comment",
              :hint => "Explain why you think this application should be approved or not. Please be polite, concise and to the point."
            = f.input :name, :placeholder => "Name", :hint => "Please use your real full name if possible."
            = f.input :email, :placeholder => "Email", :hint => "We never display your email address"
            - hint = capture do
              e.g. 1 Sowerby St, Goulburn (we never display this).
              = link_to("Why do you need my address?", faq_path(:anchor => "address"))
            = f.input :address, :placeholder => "Address", :hint => hint
            %div#faq_commenting_address.inline-hints.hidden
              = render :partial => 'static/faq_commenting_address'
            -# This is a spam bot honeytrap. A human being should not be filling this in
            -# It's not awesome for screenreaders though
            %li{style: "display: none;"}
              = label_tag :little_sweety, 'Little Sweety'
              = text_field_tag :little_sweety, "", placeholder: "Please leave this blank"
          = f.actions do
            = f.action :submit, button_html: {class: "button button-action"}
      - elsif !@application.comment_url.blank?
        %p
          = link_to "How to comment", @application.comment_url
          on this application (from #{@application.authority.full_name}).
          - if @application.on_notice_to
            = on_notice_text(@application)

#sidebar
  #alert
    = semantic_form_for @alert do |f|
      = render "alerts/signup_introduction"
      = f.inputs do
        = f.input :address, :label => "Enter a street address", :placeholder => "Enter a street address"
        = f.input :email, :label => "Enter your email address", :placeholder => "Enter your email address"
      = f.actions do
        = f.action :submit, :label => "Create Alert", :button_html => { :class => "button button-rounded button-action button-large" }

  - if @application.no_alerted || @nearby_count != 0
    #application-stats
      - if @application.no_alerted
        %p.no_alerted
          - if @application.no_alerted == 1
            1 person was
          - else
            #{@application.no_alerted} people were
          notified of this application via
          = link_to "email alerts", new_alert_path
      - if @nearby_count != 0
        = link_to "Recent nearby applications", nearby_application_url(@application, :sort => "time"), :class => "button button-rounded"

  #social
    = render "applications/twitter_share_button", :application => @application
    = render "applications/facebook_share_button", :application => @application

- if @application.location
  :javascript
    $(document).ready(function(){
      initialiseMaps(#{@application.lat}, #{@application.lng}, "#{escape_javascript(@application.address)}");
    })

= javascript_include_tag "maps"
= javascript_include_tag "applications"
